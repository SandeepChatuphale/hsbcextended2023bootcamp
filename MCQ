
1. What is the correct sequence of access modifiers in Java from least
   restrictive to most restrictive?
A. public, private, protected, default
B. default, public, protected, private
C. public, protected, default, private
D. public, default, protected, private



2. Predict the output after invoking the method doTest, and select
   the statement which is true.
   public void doTest(int x) { 
     int odd = 1; 
     if(odd) /* Line 3 */
     {
          System.out.println("odd"); 
     } 
     else 
     {
          System.out.println("even"); 
     } 
   }
A. Compilation error.
B. "odd" will always be output.
C. "even" will always be output.
D. "odd" will be output for odd values of x, and "even" for even values of x.


3. Predict the output of the given code snippet and select the statement
   which is true.
   class While {  /* Line 1 */
        public void loop() {
             int x= 0;
             while ( 1 ) { /* Line 4 */
                 System.out.print("x plus one is " + (x + 1)); /* Line 5 */
             }
        }
   }
A. There is a syntax error on line 1.
B. There are syntax errors on lines 1 and 4.
C. There are syntax errors on lines 1, 4, and 5.
D. There is a syntax error on line 4.


4.  Predict the output of the below Java code. 
    public class Increment {
	public static void main(String[] args) {
		int i = 3;
		System.out.print(++i * 2 * i++); /* Line 4 */
		System.out.println(i); /* Line 5 */
	}
    }
A. Line 4 would print 24 and Line 5 would print 4 
B. Line 4 would print 32 and Line 5 would print 4 
C. Line 4 would print 32 and Line 5 would print 5 
D. Line 4 would print 24 and Line 5 would print 5 





5. Predict the output.
   class Relational {
       public static void main(String args[]){
           int var1 = 5; 
	   int var2 = 6;
	   System.out.print(var1 > var2);
       } 
   }
A. 1
B. 0
C. true
D. false




6. Which of these keyword must be used to inherit a class?
A. super
B. this
C. extent
D. extends



7. Predict the output
public class Test {
     public static void main(String[] args) {
          for(int i = 0 ; i < 10; i++) {			
	  }		
	  System.out.println(i);	
     }	
}
A. 9
B. 10
C. Compilation Error
D. Runtime Error

8. Predict the output
   public class Test {	
        public static void main(String[] args) {
             for(int i = 0; i < 10; i++) {
	          if(i % 2 == 0)
		       continue;
	          System.out.println(i);
	     }
        }	
   }
A. Code will print all even numbers between 0 to 10
B. Code will print all odd numbers between 0 to 10
C. Compilation Error
D. Runtime Error

9. By using ____________, you can force immediate termination of loop, 
bypassing the conditional expression and any remaining code in the body of the loop.
A. switch
B. continue
C. break
D. default


10. What would be the output of the following code
    int j=50;
    while(true) {
         if(j<10)
             break;
	 j=j-10;
    }
    System.out.println("j is " +j);
A. j is 0
B. j is 50
C. No output
D. Program would not terminate



11. Predict the output of below Java application
    abstract class Widget {
         String data = "data";
         public void useWidget() {
         }
    }
    class BigWidget extends Widget{
         String data = "big data";

         public void useWidget(){
             System.out.println(data);
         }
    }
    public class WidgetUser{
         public static void main(String[] args) {
             Widget w = new BigWidget();
             w.useWidget();
         }  
    }
A. data
B. big data
C. Compilation Error
D. Runtime Error


12. Predict the output of below Java application

    class Base {      
         Base() {        
              System.out.print("Base");  
         } 
    }  
    public class Alpha extends Base {      
         public static void main(String[] args) {      
              new Alpha(); /* Line 8 */    
              new Base(); /* Line 9 */    
         }  
    }
A. Base
B. BaseBase
C. Error at Line 8
D. Error at Line 9


13. Which of these is correct way of inheriting class A by class B?
A. class B + class A {}
B. class B inherits class A {}
C. class B extends A {}
D. class B extends class A {}




14. The protected method of super class can be overriden in sub class
    by making it public. State True or False
A. TRUE
B. FALSE


15. Which of the below methods can not be overriden in Java
A. final
B. private
C. static
D. All of the Above


Q16 . Given:
class Top {
 public Top(String s) { System.out.print("B"); }
}
public class Bottom2 extends Top {
 public Bottom2(String s) {  System.out.print("D"); }
 public static void main(String [] args) {
 new Bottom2("C");
 System.out.println(" ");
} }
 What is the result?
 A. BD 
 B. DB 
 C. BDC
 D. DBC
 E. Compilation fail

Q17 Given:
class Clidder {
 private final void flipper() { System.out.println("Clidder"); }
}
public class Clidlet extends Clidder {
 public final void flipper() { System.out.println("Clidlet"); }
 public static void main(String [] args) { 
 new Clidlet().flipper(); 
} }
 What is the result?
 A. Clidlet
 B. Clidder
 C. Clidder
Clidlet
 D. Clidlet
Clidder
 E. Compilation fails

Q18 Given:
 3. public class Tenor extends Singer { 
 4. public static String sing() { return "fa"; }
 5. public static void main(String[] args) {
 6. Tenor t = new Tenor();
 7. Singer s = new Tenor();
 8. System.out.println(t.sing() + " " + s.sing());
 9. }
10. }
11. class Singer { public static String sing() { return "la"; } }
 What is the result?
 A. fa fa
 B. fa la
 C. la la
 D. Compilation fails
 E. An exception is thrown at runtime


Q19 Given:
 3. class Alpha {
 4. static String s = " ";
 5. protected Alpha() { s += "alpha "; }
 6. }
 7. class SubAlpha extends Alpha {
 8. private SubAlpha() { s += "sub "; }
 9. }
10. public class SubSubAlpha extends Alpha {
11. private SubSubAlpha() {  s += "subsub "; }
12. public static void main(String[] args) {
13. new SubSubAlpha();
14. System.out.println(s);
15. }
16. }
 What is the result?
 A. subsub
 B. sub subsub
 C. alpha subsub
 D. alpha sub subsub
 E. Compilation fails
 F. An exception is thrown at runtime



Q20 Given:
 3. class Building {
 4. Building() { System.out.print("b "); }
 5. Building(String name) { 
 6. this(); System.out.print("bn " + name); 
 7. }
 8. }
 9. public class House extends Building {
10. House() { System.out.print("h "); }
11. House(String name) { 
12. this(); System.out.print("hn " + name);
13. }
14. public static void main(String[] args) { new House("x "); }
15. }
 What is the result?
 A. h hn x
 B. hn x h
 C. b h hn x
 D. b hn x h
 E. bn x h hn x
 F. b bn x h hn x
 G. bn x b h hn x
 H. Compilation fails




Q21 Given:
 3. class Mammal {
 4. String name = "furry ";
 5. String makeNoise() { return "generic noise"; }
 6. }
 7. class Zebra extends Mammal {
 8. String name = "stripes ";
 9. String makeNoise() { return "bray"; }
10. }
11. public class ZooKeeper {
12. public static void main(String[] args) { new ZooKeeper().go(); }
13. void go() {
14. Mammal m = new Zebra();
15. System.out.println(m.name + m.makeNoise());
16. }
17. }
 What is the result?
 A. furry bray
 B. stripes bray
 C. furry generic noise
 D. stripes generic noise
 E. Compilation fails
 F. An exception is thrown at runtime

Q22) Given:
class Plane {
 static String s = "-";
 public static void main(String[] args) {
 new Plane().s1();
 System.out.println(s);
 }
 void s1() {
 try { s2(); }
 catch (Exception e) { s += "c"; }
 }
 void s2() throws Exception {
 s3(); s += "2";
 s3(); s += "2b";
 }
 void s3() throws Exception {
 throw new Exception();
 }
}
 What is the result?
 A. -
 B. -c
 C. -c2
 D. -2c
 E. -c22b
 F. -2c2b
 G. -2c2bc
 H. Compilation fails

23. Predict the output of the Java code given below

    class MyResource {
	public void close() {
		System.out.println("Close in close");
	}
    }
    class Demo {
	public static void main(String[] arg) {
	     try(MyResource s = new MyResource()) {
	          throw new Exception();
	     }catch(Exception e) {
		  System.out.println("Close in catch");
	}
    }
A. Close in close
   Close in catch
B. Close in catch
   Close in close
C. Compilation Error as MyResource does not extend Exception class
D. Compilation Error as MyResource does not implement AutoCloseable


24. In Java, which class needs to be extend from to create a Custom Exception 
    which would be under the category of "Checked" Exception.
A.  RuntimeException
B.  Error
C.  Exception
D.  CheckedException


25. Predict the output of the below Java code.
    public class Car {
         public void start() {
	      try {
                   System.out.println("Starting up");
                   throw new Exception();
              }
              catch(Exception e) {
		   System.out.println("Problem occurred");
                   System.exit(0);
              }
              finally {
          	   System.out.println("Lets walk");
              }
         } 
         public static void main(String arg[]) {
	     new Car().start();	  
         }  
    }
A. Starting up.
B. Starting up
   Problem occurred
C. Starting up
   Problem occurred
   Lets walk
D. Runtime Error


26. Which of these keywords is not a part of exception handling in Java ?
A. throw
B. throws
C. thrown
D. finally


27. Predict the output of the below Java code.
    public class Test{
         public static void main(String[] args){
	      try {
	           int x=0;
		   int y=50/x;
		   System.out.print("Division by zero ");
	      }
	      catch(ArithmeticException e) {
			System.out.print("Exception is caught ");
	      }
         }
    }
A. Division by Zero
B. Division by zero Exception is caught
C. Exception is caught
D. No output as finally block is missing


28. What would be the result of the given code snippet ?
    //required code is present
    try {
         method();
    }
    catch(RuntimeException e) {  /* catch block 1 */
         e.printStackTrace();
    }
    catch(Exception e) {  /* catch block 2 */
         e.printStackTrace();
    }
    catch(IOException e) { /* catch block 3 */
         e.printStackTrace();
    }
    //required code is present
A. Compilation Error as multiple catch blocks not allowed
B. Compilation Error due to sequence of catch block 1 and catch block 2
C. Compilation Error due to sequence of catch block 2 and catch block 3
D. Compilation Error as "Checked" Exception and "Unchecked" Exception cant be handled together


Q29) Given:
class Emu {
 static String s = "-";
 public static void main(String[] args) {
 try {
 throw new Exception();
 } catch (Exception e) {
 try { 
 try { throw new Exception();
 } catch (Exception ex) { s += "ic "; }
 throw new Exception(); } 
 catch (Exception x) { s += "mc "; }
 finally { s += "mf "; }
 } finally { s += "of "; }
 System.out.println(s);
} }
 What is the result?
 A. -ic of
 B. -mf of
 C. -mc mf
 D. -ic mf of
 E. -ic mc mf of
 F. -ic mc of mf
 G. Compilation fails




Q30) Given:
 3. class SubException extends Exception { }
 4. class SubSubException extends SubException { }
 5. 
 6. public class CC { void doStuff() throws SubException { } }
 7.
 8. class CC2 extends CC { void doStuff() throws SubSubException { } }
 9.
10. class CC3 extends CC { void doStuff() throws Exception { } }
11.
12. class CC4 extends CC { void doStuff(int x) throws Exception { } }
13.
14. class CC5 extends CC { void doStuff() { } }
 What is the result? (Choose all that apply.)
 A. Compilation succeeds
 B. Compilation fails due to an error on line 8
 C. Compilation fails due to an error on line 10
 D. Compilation fails due to an error on line 12
 E. Compilation fails due to an error on line 14



Q31) Given:
 3. public class OverAndOver {
 4. static String s = "";
 5. public static void main(String[] args) {
 6. try {
 7. s += "1";
 8. throw new Exception();
 9. } catch (Exception e) { s += "2"; 
10. } finally { s += "3"; doStuff(); s += "4"; 
11. }
12. System.out.println(s);
13. }
14. static void doStuff() { int x = 0; int y = 7/x; }
15. }
 What is the result?
 A. 12
 B. 13
 C. 123
 D. 1234
 E. Compilation fails
 F. 123 followed by an exception
 G. 1234 followed by an exception
 H. An exception is thrown with no other output


Q32)Abstract class can contain constructor.
a) true
b) false


Q33)
what is the O/p?

interface I1
{
	void m1();
}

interface I2 extends I1
{
	void m2();
}

public class Demo implements I2 {

	public void m2(){
		System.out.println("In m2()");
	}
	public static void main(String[] args) {
		Demo d = new Demo();
		d.m2();		
	}	 
}

a) compilation error
b) Exception
c) In m2()
d) None of the above


Q34) Given two files:
 1. package pkgA;
 2. public class Foo {
 3. int a = 5;
 4. protected int b = 6;
 5. public int c = 7;
 6. }
 3. package pkgB;
 4. import pkgA.*;
 5. public class Baz extends Foo {
 6. public void display() {
 7. Foo f = new Foo();
 8. System.out.print(" " + f.a);
 9. System.out.print(" " + f.b);
10. System.out.print(" " + f.c);
11. }
12. }
 What is the result? (Choose all that apply.)
 A. 5 6 7
 B. 5 followed by an exception
 C. Compilation fails with an error on line 7
 D. Compilation fails with an error on line 8
 E. Compilation fails with an error on line 9
 F. Compilation fails with an error on line 10


Q35) Given two files:
 1. package pkgA;
 2. public class Foo {
 3. int a = 5;
 4. protected int b = 6;
 5. public int c = 7;
 6. }
 3. package pkgB;
 4. import pkgA.*;
 5. public class Baz extends Foo {
 6. public void display() {
 7. Foo f = new Foo();
 8. System.out.print(" " + f.a);
 9. System.out.print(" " + b);
10. System.out.print(" " + f.c);
11. }
12. }
 What is the result? (Choose all that apply.)
 A. 5 6 7
 B. 5 followed by an exception
 C. Compilation fails with an error on line 7
 D. Compilation fails with an error on line 8
 E. Compilation fails with an error on line 9
 F. Compilation fails with an error on line 10

Q36)  Given:
 3. public class Dark {
 4. int x = 3;
 5. public static void main(String[] args) {
 6. new Dark().go1();
 7. }
 8. void go1() {
 9. int x;
10. go2(++x);
11. }
12. void go2(int y) {
13. int x = ++y;
14. System.out.println(x);
15. }
16. } 
 What is the result?
 A. 2
 B. 3
 C. 4
 D. 5
 E. Compilation fails
 F. An exception is thrown at runtime


Q37) Given:
 3. public class Ouch {
 4. static int ouch = 7;
 5. public static void main(String[] args) {
 6. new Ouch().go(ouch);
 7. System.out.print(" " + ouch);
 8. }
 9. void go(int ouch) {
10. ouch++;
11. for(ouch = 3; ouch < 6; ouch++) 
12. ;
13. System.out.print(" " + ouch);
14. }
15. } 
 What is the result?
 A. 5 7
 B. 5 8
 C. 8 7
 D. 8 8
 E. Compilation fails 
 F. An exception is thrown at runtime
G. 6 7


Q38) public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> list = new ArrayList<>();
		list.add(20);
		list.add(10);
		list.add(50);
		Collections.sort(list);
		list.add(15);
		System.out.println(list);
	}
}

A. [10, 20, 50, 15]
B. [15, 10, 20, 50]
C. [10, 15, 20, 50]
D. [20, 15, 10, 50]



Q39) Which of the following interface is suitable for a class that stores associations of keys to values?
A. Set
B. SortedSet
C. Map
D. List

Q40). Which of the following collections are synchronized by nature ?
A. ArrayList
B. LinkedList
C. SynchronizedList
D. Vector

Q41) What would be the output of the Java code given below ?
class Demo {
	public static void main(String[] args) {
		HashMap<Integer, String> map = new HashMap<>();
		map.put(1, "A");
		map.put(1, "B");
		System.out.println(map.get(1));
	}
}
A. A 
B. B
C. Compilation error as duplicates keys not allowed in Map
D. A B


Q42) Predict the output of below Java Code.
public class Test {
	public static void main(String[] args) {
		Set<Person> persons = new HashSet<Person>();
		persons.add(new Person(13));
		persons.add(new Person(33));
		persons.add(new Person(21));
		persons.add(new Person(21)); 
		System.out.print(persons.size()+" ");
		System.out.print(persons); }}
class Person implements Comparable<Person> {
	Integer age;
	public Person(int age) {
		this.age = age;
	}
	public int compareTo(Person p) {
		return p.age.compareTo(this.age);
	}
		public String toString() {
		return ""+ this.age;
	}
}
A. 3 [13, 21, 33]
B. 4 [33, 21, 21, 13]
C. Compilation Error as duplicates are not allowed in HashSet
D. Runtime Error as duplicates are not allowed in HashSet


Q43) Which of these packages contain all the collection classes in Java ?
A. java.lang
B. java.util
C. java.awt
D. java.net

Q 44) Which of these methods deletes all the elements from invoking collection?
a) clear()
b) reset()
c) delete()
d) refresh()

Q45) Which of the following interface is used for implementing "natural sorting" algorithm.
a) Comparable
b) Comparator
c) Serializable
d) None of the above

Q46)Comparator has which method
a) compareTo
b) compare
c) check
d) None of the above


Q47) What is O/P following Code
import java.util.*;
class MapEQ {
 public static void main(String[] args) {
 Map<ToDos, String> m = new HashMap<ToDos, String>();
 ToDos t1 = new ToDos("Monday");
 ToDos t2 = new ToDos("Monday");
 ToDos t3 = new ToDos("Tuesday");
 m.put(t1, "doLaundry");
 m.put(t2, "payBills");
 m.put(t3, "cleanAttic");
 System.out.println(m.size());
 }
}
class ToDos{
 String day;
 ToDos(String d) { day = d; }
 public boolean equals(Object o) {
 return ((ToDos)o).day == this.day;
 }
 // public int hashCode() { return 9; }

Which is correct? (Choose all that apply.)
 a. As the code stands it will not compile
 b. As the code stands the output will be 3
 c. Exception
 d. If the hashCode() method is uncommented the output will be 3


Q48) What is the O/P following code
import java.util.*;
 class Dog { int size; Dog(int s) { size = s; } }
 public class FirstGrade {
 public static void main(String[] args) {
 TreeSet<Integer> i = new TreeSet<Integer>();
 TreeSet<Dog> d = new TreeSet<Dog>();
 
d.add(new Dog(1)); d.add(new Dog(2)); d.add(new Dog(1));
i.add(1); i.add(2); i.add(1);
 System.out.println(d.size() + " " + i.size());
}
}

 a. 1 2
 b. 2 2
 c. Compilation fails
 d. An exception is thrown at runtime
